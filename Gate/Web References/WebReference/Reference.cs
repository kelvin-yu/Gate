//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Gate.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICardService", Namespace="http://tempuri.org/")]
    public partial class CardService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTransactionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransactionSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOneCardSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccessSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccessLevelListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CardService() {
            this.Url = "http://192.168.2.204:8000/DMTSolutions/CardReader";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTransactionListCompletedEventHandler GetTransactionListCompleted;
        
        /// <remarks/>
        public event UpdateTransactionSQLCompletedEventHandler UpdateTransactionSQLCompleted;
        
        /// <remarks/>
        public event UpdateOneCardSQLCompletedEventHandler UpdateOneCardSQLCompleted;
        
        /// <remarks/>
        public event GetCardListCompletedEventHandler GetCardListCompleted;
        
        /// <remarks/>
        public event UpdateAccessSQLCompletedEventHandler UpdateAccessSQLCompleted;
        
        /// <remarks/>
        public event GetAccessLevelListCompletedEventHandler GetAccessLevelListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetTransactionList", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Transaction[] GetTransactionList() {
            object[] results = this.Invoke("GetTransactionList", new object[0]);
            return ((Transaction[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionListAsync() {
            this.GetTransactionListAsync(null);
        }
        
        /// <remarks/>
        public void GetTransactionListAsync(object userState) {
            if ((this.GetTransactionListOperationCompleted == null)) {
                this.GetTransactionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionListOperationCompleted);
            }
            this.InvokeAsync("GetTransactionList", new object[0], this.GetTransactionListOperationCompleted, userState);
        }
        
        private void OnGetTransactionListOperationCompleted(object arg) {
            if ((this.GetTransactionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionListCompleted(this, new GetTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateTransactionSQL", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTransactionSQL([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] Transaction[] newTransactions, out bool UpdateTransactionSQLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateTransactionSQLResultSpecified) {
            object[] results = this.Invoke("UpdateTransactionSQL", new object[] {
                        newTransactions});
            UpdateTransactionSQLResult = ((bool)(results[0]));
            UpdateTransactionSQLResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateTransactionSQLAsync(Transaction[] newTransactions) {
            this.UpdateTransactionSQLAsync(newTransactions, null);
        }
        
        /// <remarks/>
        public void UpdateTransactionSQLAsync(Transaction[] newTransactions, object userState) {
            if ((this.UpdateTransactionSQLOperationCompleted == null)) {
                this.UpdateTransactionSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionSQLOperationCompleted);
            }
            this.InvokeAsync("UpdateTransactionSQL", new object[] {
                        newTransactions}, this.UpdateTransactionSQLOperationCompleted, userState);
        }
        
        private void OnUpdateTransactionSQLOperationCompleted(object arg) {
            if ((this.UpdateTransactionSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransactionSQLCompleted(this, new UpdateTransactionSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateOneCardSQL", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOneCardSQL([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Card card, out bool UpdateOneCardSQLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateOneCardSQLResultSpecified) {
            object[] results = this.Invoke("UpdateOneCardSQL", new object[] {
                        card});
            UpdateOneCardSQLResult = ((bool)(results[0]));
            UpdateOneCardSQLResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateOneCardSQLAsync(Card card) {
            this.UpdateOneCardSQLAsync(card, null);
        }
        
        /// <remarks/>
        public void UpdateOneCardSQLAsync(Card card, object userState) {
            if ((this.UpdateOneCardSQLOperationCompleted == null)) {
                this.UpdateOneCardSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOneCardSQLOperationCompleted);
            }
            this.InvokeAsync("UpdateOneCardSQL", new object[] {
                        card}, this.UpdateOneCardSQLOperationCompleted, userState);
        }
        
        private void OnUpdateOneCardSQLOperationCompleted(object arg) {
            if ((this.UpdateOneCardSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOneCardSQLCompleted(this, new UpdateOneCardSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCardList", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Card[] GetCardList() {
            object[] results = this.Invoke("GetCardList", new object[0]);
            return ((Card[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardListAsync() {
            this.GetCardListAsync(null);
        }
        
        /// <remarks/>
        public void GetCardListAsync(object userState) {
            if ((this.GetCardListOperationCompleted == null)) {
                this.GetCardListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardListOperationCompleted);
            }
            this.InvokeAsync("GetCardList", new object[0], this.GetCardListOperationCompleted, userState);
        }
        
        private void OnGetCardListOperationCompleted(object arg) {
            if ((this.GetCardListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardListCompleted(this, new GetCardListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateAccessSQL", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAccessSQL([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] AccessLevel[] newAccess, out bool UpdateAccessSQLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateAccessSQLResultSpecified) {
            object[] results = this.Invoke("UpdateAccessSQL", new object[] {
                        newAccess});
            UpdateAccessSQLResult = ((bool)(results[0]));
            UpdateAccessSQLResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateAccessSQLAsync(AccessLevel[] newAccess) {
            this.UpdateAccessSQLAsync(newAccess, null);
        }
        
        /// <remarks/>
        public void UpdateAccessSQLAsync(AccessLevel[] newAccess, object userState) {
            if ((this.UpdateAccessSQLOperationCompleted == null)) {
                this.UpdateAccessSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccessSQLOperationCompleted);
            }
            this.InvokeAsync("UpdateAccessSQL", new object[] {
                        newAccess}, this.UpdateAccessSQLOperationCompleted, userState);
        }
        
        private void OnUpdateAccessSQLOperationCompleted(object arg) {
            if ((this.UpdateAccessSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccessSQLCompleted(this, new UpdateAccessSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetAccessList", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public AccessLevel[] GetAccessLevelList() {
            object[] results = this.Invoke("GetAccessLevelList", new object[0]);
            return ((AccessLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAccessLevelListAsync() {
            this.GetAccessLevelListAsync(null);
        }
        
        /// <remarks/>
        public void GetAccessLevelListAsync(object userState) {
            if ((this.GetAccessLevelListOperationCompleted == null)) {
                this.GetAccessLevelListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccessLevelListOperationCompleted);
            }
            this.InvokeAsync("GetAccessLevelList", new object[0], this.GetAccessLevelListOperationCompleted, userState);
        }
        
        private void OnGetAccessLevelListOperationCompleted(object arg) {
            if ((this.GetAccessLevelListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccessLevelListCompleted(this, new GetAccessLevelListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dmtserv.CardServices")]
    public partial class Transaction {
        
        private int cardCodeField;
        
        private string cardHolderField;
        
        private System.DateTime dateTimeField;
        
        private int errorNumberField;
        
        private int readerNumberField;

        public Transaction() { }

        public Transaction(int readerNumber, int cardCode, DateTime dateTime, int errorCode, string cardHolder)
        {
            this.readerNumber = readerNumber;
            this.cardCode = cardCode;
            this.dateTime = dateTime;
            this.errorNumber = errorCode;
            this.cardHolder = cardHolder;
        }

        /// <remarks/>
        public int cardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string cardHolder {
            get {
                return this.cardHolderField;
            }
            set {
                this.cardHolderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        public int errorNumber {
            get {
                return this.errorNumberField;
            }
            set {
                this.errorNumberField = value;
            }
        }
        
        /// <remarks/>
        public int readerNumber {
            get {
                return this.readerNumberField;
            }
            set {
                this.readerNumberField = value;
            }
        }
      
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dmtserv.CardServices")]
    public partial class AccessLevel {
        
        private System.DateTime dateEndField;
        
        private System.DateTime dateStartField;
        
        private string nameField;
        
        private int numberOfUsesField;
        
        private bool useDateRangeField;
        
        private bool usePassBackField;
        
        private string[] weekReader1AccessField;
        
        private string[] weekReader2AccessField;
        
        private System.DateTime[] weekTimeEndField;
        
        private System.DateTime[] weekTimeStartField;

        public AccessLevel() { }

        public AccessLevel(string name, DateTime[] weekTimeStart, DateTime[] weekTimeEnd, string[] weekReader1Access, string[] weekReader2Access,
    bool usePassBack, int numberOfUses, bool useDateRange, DateTime dateStart, DateTime dateEnd)
        {
            this.name = name;
            this.weekTimeStart = weekTimeStart;
            this.weekTimeEnd = weekTimeEnd;
            this.weekReader1Access = weekReader1Access;
            this.weekReader2Access = weekReader2Access;
            this.usePassBack = usePassBack;
            this.numberOfUses = numberOfUses;
            this.useDateRange = useDateRange;
            this.dateStart = dateStart;
            this.dateEnd = dateEnd;
        }
        
        /// <remarks/>
        public System.DateTime dateEnd {
            get {
                return this.dateEndField;
            }
            set {
                this.dateEndField = value;
            }
        }
     
        
        /// <remarks/>
        public System.DateTime dateStart {
            get {
                return this.dateStartField;
            }
            set {
                this.dateStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int numberOfUses {
            get {
                return this.numberOfUsesField;
            }
            set {
                this.numberOfUsesField = value;
            }
        }
         
        /// <remarks/>
        public bool useDateRange {
            get {
                return this.useDateRangeField;
            }
            set {
                this.useDateRangeField = value;
            }
        }
        
        /// <remarks/>
        public bool usePassBack {
            get {
                return this.usePassBackField;
            }
            set {
                this.usePassBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] weekReader1Access {
            get {
                return this.weekReader1AccessField;
            }
            set {
                this.weekReader1AccessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] weekReader2Access {
            get {
                return this.weekReader2AccessField;
            }
            set {
                this.weekReader2AccessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public System.DateTime[] weekTimeEnd {
            get {
                return this.weekTimeEndField;
            }
            set {
                this.weekTimeEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public System.DateTime[] weekTimeStart {
            get {
                return this.weekTimeStartField;
            }
            set {
                this.weekTimeStartField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dmtserv.CardServices")]
    public partial class Card {
        
        private string accessLevelField;
        
        private int cardCodeField;

        private System.DateTime dateAddedField;

        private string nameField;

        public Card() { }

        public Card(string name, int cardCode, string accessLevel, DateTime dateAdded)
        {
            this.name = name;
            this.cardCode = cardCode;
            this.accessLevel = accessLevel;
            this.dateAdded = dateAdded;
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string accessLevel {
            get {
                return this.accessLevelField;
            }
            set {
                this.accessLevelField = value;
            }
        }
        
        /// <remarks/>
        public int cardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateAdded {
            get {
                return this.dateAddedField;
            }
            set {
                this.dateAddedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTransactionListCompletedEventHandler(object sender, GetTransactionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Transaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Transaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateTransactionSQLCompletedEventHandler(object sender, UpdateTransactionSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTransactionSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTransactionSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateTransactionSQLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateTransactionSQLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOneCardSQLCompletedEventHandler(object sender, UpdateOneCardSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOneCardSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOneCardSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateOneCardSQLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateOneCardSQLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCardListCompletedEventHandler(object sender, GetCardListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Card[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Card[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateAccessSQLCompletedEventHandler(object sender, UpdateAccessSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccessSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccessSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateAccessSQLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateAccessSQLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAccessLevelListCompletedEventHandler(object sender, GetAccessLevelListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccessLevelListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccessLevelListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessLevel[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
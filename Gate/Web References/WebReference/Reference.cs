//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace Gate.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ICardService", Namespace="http://tempuri.org/")]
    public partial class CardService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTransactionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTransactionSQLOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOneCardSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CardService() {
            this.Url = "http://192.168.2.204:8000/DMTSolutions/CardReader";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTransactionListCompletedEventHandler GetTransactionListCompleted;
        
        /// <remarks/>
        public event UpdateTransactionSQLCompletedEventHandler UpdateTransactionSQLCompleted;
        
        /// <remarks/>
        public event UpdateOneCardSqlCompletedEventHandler UpdateOneCardSqlCompleted;
        
        /// <remarks/>
        public event GetCardListCompletedEventHandler GetCardListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetTransactionList", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Transaction[] GetTransactionList() {
            object[] results = this.Invoke("GetTransactionList", new object[0]);
            return ((Transaction[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionListAsync() {
            this.GetTransactionListAsync(null);
        }
        
        /// <remarks/>
        public void GetTransactionListAsync(object userState) {
            if ((this.GetTransactionListOperationCompleted == null)) {
                this.GetTransactionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionListOperationCompleted);
            }
            this.InvokeAsync("GetTransactionList", new object[0], this.GetTransactionListOperationCompleted, userState);
        }
        
        private void OnGetTransactionListOperationCompleted(object arg) {
            if ((this.GetTransactionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionListCompleted(this, new GetTransactionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateTransactionSQL", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTransactionSQL([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] Transaction[] newTransactions, out bool UpdateTransactionSQLResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateTransactionSQLResultSpecified) {
            object[] results = this.Invoke("UpdateTransactionSQL", new object[] {
                        newTransactions});
            UpdateTransactionSQLResult = ((bool)(results[0]));
            UpdateTransactionSQLResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateTransactionSQLAsync(Transaction[] newTransactions) {
            this.UpdateTransactionSQLAsync(newTransactions, null);
        }
        
        /// <remarks/>
        public void UpdateTransactionSQLAsync(Transaction[] newTransactions, object userState) {
            if ((this.UpdateTransactionSQLOperationCompleted == null)) {
                this.UpdateTransactionSQLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionSQLOperationCompleted);
            }
            this.InvokeAsync("UpdateTransactionSQL", new object[] {
                        newTransactions}, this.UpdateTransactionSQLOperationCompleted, userState);
        }
        
        private void OnUpdateTransactionSQLOperationCompleted(object arg) {
            if ((this.UpdateTransactionSQLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTransactionSQLCompleted(this, new UpdateTransactionSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("UpdateOneCardSql", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOneCardSql([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Card card, out bool UpdateOneCardSqlResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateOneCardSqlResultSpecified) {
            object[] results = this.Invoke("UpdateOneCardSql", new object[] {
                        card});
            UpdateOneCardSqlResult = ((bool)(results[0]));
            UpdateOneCardSqlResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateOneCardSqlAsync(Card card) {
            this.UpdateOneCardSqlAsync(card, null);
        }
        
        /// <remarks/>
        public void UpdateOneCardSqlAsync(Card card, object userState) {
            if ((this.UpdateOneCardSqlOperationCompleted == null)) {
                this.UpdateOneCardSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOneCardSqlOperationCompleted);
            }
            this.InvokeAsync("UpdateOneCardSql", new object[] {
                        card}, this.UpdateOneCardSqlOperationCompleted, userState);
        }
        
        private void OnUpdateOneCardSqlOperationCompleted(object arg) {
            if ((this.UpdateOneCardSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOneCardSqlCompleted(this, new UpdateOneCardSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCardList", RequestNamespace="http://dmtserv.CardServices", ResponseNamespace="http://dmtserv.CardServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Card[] GetCardList() {
            object[] results = this.Invoke("GetCardList", new object[0]);
            return ((Card[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCardListAsync() {
            this.GetCardListAsync(null);
        }
        
        /// <remarks/>
        public void GetCardListAsync(object userState) {
            if ((this.GetCardListOperationCompleted == null)) {
                this.GetCardListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardListOperationCompleted);
            }
            this.InvokeAsync("GetCardList", new object[0], this.GetCardListOperationCompleted, userState);
        }
        
        private void OnGetCardListOperationCompleted(object arg) {
            if ((this.GetCardListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardListCompleted(this, new GetCardListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTransactionListCompletedEventHandler(object sender, GetTransactionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Transaction[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Transaction[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateTransactionSQLCompletedEventHandler(object sender, UpdateTransactionSQLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTransactionSQLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTransactionSQLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateTransactionSQLResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateTransactionSQLResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void UpdateOneCardSqlCompletedEventHandler(object sender, UpdateOneCardSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOneCardSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOneCardSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateOneCardSqlResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateOneCardSqlResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCardListCompletedEventHandler(object sender, GetCardListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Card[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Card[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591